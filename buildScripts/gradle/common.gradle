def gitShortRev() {
    def gitCommit = ""
    def proc = "git rev-parse --short HEAD".execute()
    proc.in.eachLine { line -> gitCommit = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    return gitCommit
}

allprojects {
    ext.COMPILE_SDK_VERSION = 30
    ext.MIN_SDK_VERSION = 14
    ext.TARGET_SDK_VERSION = 28
    ext.VERSION_CODE = 1

    if ("${System.env.CI}".equalsIgnoreCase("true")) {
        ext.VERSION_NAME = System.getenv("GITHUB_REF_SLUG")
    } else {
        ext.VERSION_NAME = "local"
    }

    if ("${System.env.PUBLISH_RELEASE}".equalsIgnoreCase("true")) {
        ext.VERSION_SUFFIX = ""
    } else if ("${System.env.CI}".equalsIgnoreCase("true")) {
        ext.VERSION_SUFFIX = "-${System.env.GITHUB_SHA_SHORT}-SNAPSHOT"
    } else {
        ext.VERSION_SUFFIX = "-${gitShortRev()}-SNAPSHOT"
    }
    ext.ARTIFACT_VERSION = "2.3.4"
    ext.TEST_HOST_APP_APPLICATION_ID = 'com.tencent.shadow.test.hostapp'
    ext.SAMPLE_HOST_APP_APPLICATION_ID = 'com.tencent.shadow.sample.host'
    repositories {
        maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        mavenLocal()
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven { url 'https://jitpack.io' }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
    }
}
