buildscript {
    loadVersions:
    {// 读取versions.properties到ext中，供项目中直接用变量引用版本号
        def versions_properties_path = '../../../../../../../../buildScripts/gradle/versions.properties'
        def versions = new Properties()
        versions.load(file(versions_properties_path).newReader())
        versions.forEach { key, stringValue ->
            def value = stringValue?.isInteger() ? stringValue as Integer : stringValue
            ext.set(key, value)
        }
    }
    repositories {
        if (!System.getenv().containsKey("DISABLE_TENCENT_MAVEN_MIRROR")) {
            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        } else {
            google()
            mavenCentral()
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$build_gradle_version"
    }
}

plugins {
    id 'com.android.application'
}

allprojects {
    repositories {
        if (!System.getenv().containsKey("DISABLE_TENCENT_MAVEN_MIRROR")) {
            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        } else {
            google()
            mavenCentral()
        }
    }
}

ext.disable_shadow_transform = true

android {
    compileSdkVersion COMPILE_SDK_VERSION

    defaultConfig {
        applicationId "com.tencent.shadow.test.gradle.case1"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
    }
}

